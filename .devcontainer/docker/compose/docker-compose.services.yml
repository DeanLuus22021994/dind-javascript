# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

services:
  buildkit:
    build:
      context: ../
      dockerfile: docker/files/Dockerfile.buildkit
    image: dind-buildkit:latest
    container_name: dind-buildkit
    privileged: true
    restart: unless-stopped
    volumes:
      - dind-buildkit-cache:/var/lib/buildkit
    networks:
      - devcontainer-network
    environment:
      - BUILDKITD_FLAGS=--oci-worker-no-process-sandbox --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
    healthcheck:
      test: ["CMD", "buildctl", "debug", "workers"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    build:
      context: ../
      dockerfile: docker/files/Dockerfile.redis
    image: dind-redis:latest
    container_name: dind-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - dind-redis-data:/data
      - ../config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - devcontainer-network
    environment:
      - REDIS_MAXMEMORY=256mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  registry:
    build:
      context: ../
      dockerfile: docker/files/Dockerfile.registry
    image: dind-registry:latest
    container_name: dind-registry
    restart: unless-stopped
    ports:
      - "5001:5000"
    volumes:
      - dind-registry-data:/var/lib/registry
      - ../config/registry-config.yml:/etc/docker/registry/config.yml:ro
    networks:
      - devcontainer-network
    environment:
      - REGISTRY_STORAGE_DELETE_ENABLED=true
      - REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin=['*']
      - REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods=['HEAD','GET','OPTIONS','DELETE']
      - REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers=['Authorization','Accept','Cache-Control']
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/v2/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  postgres:
    build:
      context: ../
      dockerfile: docker/files/Dockerfile.postgres
    image: dind-postgres:latest
    container_name: dind-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - dind-postgres-data:/var/lib/postgresql/data
      - dind-postgres-init:/docker-entrypoint-initdb.d
      - ../config/postgresql.conf:/usr/local/share/postgresql/postgresql.conf.sample:ro
    networks:
      - devcontainer-network
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    env_file:
      - ../config/performance.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d devdb"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  node:
    build:
      context: ../
      dockerfile: docker/files/Dockerfile.node
    image: dind-node:latest
    container_name: dind-node
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "3001:3001"
      - "8080:8080"
      - "9000:9000"
      - "9229:9229"
    volumes:
      - dind-node-modules:/app/node_modules
      - dind-node-cache:/opt/yarn-cache
      - ../../..:/workspace:cached
    networks:
      - devcontainer-network
    environment:
      - NODE_ENV=development
      - NPM_CONFIG_LOGLEVEL=warn
      - YARN_CACHE_FOLDER=/opt/yarn-cache
    working_dir: /workspace
    healthcheck:
      test: ["CMD", "node", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - redis
      - postgres

networks:
  devcontainer-network:
    driver: bridge
    external: false

volumes:
  dind-buildkit-cache:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=1G,uid=1000,gid=1000
  dind-redis-data:
    driver: local
  dind-registry-data:
    driver: local
  dind-postgres-data:
    driver: local
  dind-postgres-init:
    driver: local
  dind-node-modules:
    driver: local
  dind-node-cache:
    driver: local
