# syntax=docker/dockerfile:1.8
FROM postgres:15-alpine AS base

# Build arguments
ARG BUILDKIT_INLINE_CACHE=1
ARG BUILDPLATFORM
ARG TARGETPLATFORM

# Install performance tools with caching
RUN --mount=type=cache,target=/var/cache/apk,sharing=locked,id=apk-cache-postgres-$TARGETPLATFORM \
  --mount=type=cache,target=/etc/apk/cache,sharing=locked,id=apk-etc-postgres-$TARGETPLATFORM \
  apk add --no-cache \
  postgresql-contrib \
  curl \
  wget \
  htop \
  iotop \
  jq \
  bash

# Performance-optimized PostgreSQL configuration
RUN echo '# PostgreSQL Performance Optimizations' > /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'shared_buffers = 256MB' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'effective_cache_size = 1GB' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'maintenance_work_mem = 64MB' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'checkpoint_completion_target = 0.9' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'wal_buffers = 16MB' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'default_statistics_target = 100' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'random_page_cost = 1.1' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'effective_io_concurrency = 200' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'work_mem = 4MB' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'min_wal_size = 1GB' >> /usr/local/share/postgresql/postgresql-perf.conf \
  && echo 'max_wal_size = 4GB' >> /usr/local/share/postgresql/postgresql-perf.conf

# Create performance-optimized cache directories
RUN --mount=type=cache,target=/cache/postgres,sharing=locked,id=postgres-cache-$TARGETPLATFORM \
  mkdir -p /cache/postgres \
  && chown postgres:postgres /cache/postgres

# Performance environment variables
ENV POSTGRES_INITDB_ARGS="--encoding=UTF-8 --lc-collate=C --lc-ctype=C --data-checksums" \
  POSTGRES_HOST_AUTH_METHOD=trust \
  PGDATA=/var/lib/postgresql/data

# High-performance health check
HEALTHCHECK --interval=5s --timeout=3s --retries=2 --start-period=10s \
  CMD pg_isready -U ${POSTGRES_USER:-devuser} -d ${POSTGRES_DB:-devdb} -h localhost || exit 1

# Performance-optimized startup command
CMD ["postgres", \
  "-c", "config_file=/usr/local/share/postgresql/postgresql-perf.conf", \
  "-c", "shared_preload_libraries=pg_stat_statements", \
  "-c", "log_statement=all", \
  "-c", "log_min_duration_statement=0"]
